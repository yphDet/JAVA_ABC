代码块
1、static代码块也叫静态代码块，作用就是对类进行初始化，而且它随着类的加载而执行，并且只会执行一次。
如果是普通代码块，每创建对象，就执行一次；【提高代码的复用性】

静态的 > 代码块的优先级 > 构造器（在继承关系中父类优先）

2、类什么时候被加载【但是   类只会加载一次！！！】——》所以静态代码块只会执行一次
2.1创建对象实例时（new）
2.2创建子类对象实例，父类也会被加载
2.3使用类的静态成员时

（！！！）3、普通的代码块，在创建对象实例时，也被隐式的调用
被创建一次，就会调用一次；
如果只是直接用类的访问静态成员时，普通代码块并不会执行

4、创建一个对象时，在一个类调用顺序
4.1调用静态代码块和静态属性初始化（注意：静态代码块和静态属性初始化调用的优先级一样，
如果有多个静态代码块和多个静态变量初始化，则按他们定义的顺序调用）
4.2调用普通代码块和普通属性的初始化（注意：普通代码块和普通属性初始化调用的优先级一样，
如果有多个普通代码块和多个普通属性初始化，则按定义顺序调用）
4.3调用构造方法

5、构造器的最前面其实隐含了super()和调用普通代码块[默认代码块语句体中没有写任何代码]

6、创建一个子类对象时（继承关系），他们的静态代码块，静态属性初始化，普通代码块，普通属性初始化，构造器方法的调用顺序
【简单来讲：静态、普通、构造器在继承关系中的调用顺序（优先级）】
6.1父类的构造代码块和静态属性（优先级一样，按定义顺序执行）
6.2子类的静态代码块和静态属性（优先级一样，按定义顺序执行）
6.3父类的普通代码块和普通属性（优先级一样，按定义顺序执行）
6.4父类构造器
6.5子类的普通代码块和普通属性（优先级一样，按定义顺序执行）
6.6子类构造器
【静态的 》 普通的 》 构造器 （继承中父类优先）】

7、静态的只能调用静态的
普通的可以调用任意成员（包括静态的）

sum：
1）static代码块是类加载是，执行，只会执行一次
2）普通代码块是在创建对象时调用的，创建一次，调用一次
3) 静态的 > 代码块的优先级 > 构造器【父类   >   子类】

