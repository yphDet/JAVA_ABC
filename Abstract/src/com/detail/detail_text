1)用abstract关键字来修饰一个类时，这个类就叫抽象类
访问修饰符 abstract 类名{
}

2）用abstract关键字来修饰一个方法时，这个方法就是抽象方法
访问修饰符 abstract 返回类型 方法名（参数列表）；//没有方法体；

3）对2）的补充
100% 当一个类中存在抽象方法时，需要将该类声明为abstract类

100% 4）抽象类的价值更多作用是在于设计，是设计者设计好后，
让子类继承并实现抽象类（）

5)抽象类 ，是考官比较爱问的知识点，在框架和设计模式使用较多

6）抽象类可以有任一成员【因为抽象类还是类】。比如：非抽象方法、构造器、静态属性等等
简单来说就是普通类可以用什么抽象类也可以。

7）抽象方法不能有主体，即不能实现
简单来说就是抽象方法的语法：
访问修饰符 abstract 返回类型 方法名(参数列表);

8)如果一个类继承了抽象类，则它必须实现抽象类的所有抽象方法，除非它自己也声明为abstact类

200% 9）抽象方法不能使用private(访问权限)、fianl(作用)和static来修饰，
因为这些关键字都是重写相违背的     本质  （重写） 抽象方法的实现。

100% 10)抽象类不能被实例化。

11）抽象类不一定要包含abstract方法，也就是说，抽象类可以没有abstract方法

12）一旦类包含了abstract方法，则这个类必须声明为abstract

100% 13）abstract只能修饰类和方法，不能修饰属性和其他的。[!!!]